"""refactor_wechat_as_separate_account_server

Revision ID: d6738b5ada70
Revises: d89e6f4b3a2c
Create Date: 2025-08-23 12:10:28.803914

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = 'd6738b5ada70'
down_revision: Union[str, None] = 'd89e6f4b3a2c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('announcements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_announcements'))
    )
    op.create_index(op.f('ix_announcements_title'), 'announcements', ['title'], unique=False)
    op.create_table('images',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('kind', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('sega_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('uploaded_by', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_images'))
    )
    op.create_index(op.f('ix_images_sega_name'), 'images', ['sega_name'], unique=False)
    op.create_table('user_accounts',
    sa.Column('account_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('account_server', sa.Enum('DIVING_FISH', 'LXNS', 'WECHAT', name='accountserver'), nullable=False),
    sa.Column('account_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('nickname', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bind_qq', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('player_rating', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('account_name', 'account_server', name=op.f('pk_user_accounts'))
    )
    op.create_index(op.f('ix_user_accounts_username'), 'user_accounts', ['username'], unique=False)
    op.create_table('users',
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('prefer_server', sa.Enum('DIVING_FISH', 'LXNS', 'WECHAT', name='accountserver'), nullable=False),
    sa.Column('api_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('privilege', sa.Enum('BANNED', 'NORMAL', 'ADMIN', name='privilege'), server_default='NORMAL', nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('username', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_api_token'), 'users', ['api_token'], unique=True)
    op.create_table('announcement_reads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('announcement_id', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('read_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['announcement_id'], ['announcements.id'], name=op.f('fk_announcement_reads_announcement_id_announcements'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['username'], ['users.username'], name=op.f('fk_announcement_reads_username_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_announcement_reads'))
    )
    op.create_index(op.f('ix_announcement_reads_announcement_id'), 'announcement_reads', ['announcement_id'], unique=False)
    op.create_index(op.f('ix_announcement_reads_username'), 'announcement_reads', ['username'], unique=False)
    op.create_table('user_preferences',
    sa.Column('maimai_version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('simplified_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('character_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('friend_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('display_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('dx_rating', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('qr_size', sa.Integer(), nullable=False),
    sa.Column('mask_type', sa.Integer(), nullable=False),
    sa.Column('chara_info_color', sqlmodel.sql.sqltypes.AutoString(), server_default='#fee37c', nullable=False),
    sa.Column('show_date', sa.Boolean(), nullable=False),
    sa.Column('player_name_source', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('character_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('background_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('frame_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('passname_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['background_id'], ['images.id'], name=op.f('fk_user_preferences_background_id_images'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['character_id'], ['images.id'], name=op.f('fk_user_preferences_character_id_images'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['frame_id'], ['images.id'], name=op.f('fk_user_preferences_frame_id_images'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['passname_id'], ['images.id'], name=op.f('fk_user_preferences_passname_id_images'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['username'], ['users.username'], name=op.f('fk_user_preferences_username_users')),
    sa.PrimaryKeyConstraint('username', name=op.f('pk_user_preferences'))
    )
    op.create_table('wechat_accounts',
    sa.Column('account_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('friend_code', sa.Integer(), nullable=False),
    sa.Column('star', sa.Integer(), nullable=False),
    sa.Column('trophy', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['account_name'], ['user_accounts.account_name'], name=op.f('fk_wechat_accounts_account_name_user_accounts')),
    sa.PrimaryKeyConstraint('account_name', name=op.f('pk_wechat_accounts'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('wechat_accounts')
    op.drop_table('user_preferences')
    op.drop_index(op.f('ix_announcement_reads_username'), table_name='announcement_reads')
    op.drop_index(op.f('ix_announcement_reads_announcement_id'), table_name='announcement_reads')
    op.drop_table('announcement_reads')
    op.drop_index(op.f('ix_users_api_token'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_user_accounts_username'), table_name='user_accounts')
    op.drop_table('user_accounts')
    op.drop_index(op.f('ix_images_sega_name'), table_name='images')
    op.drop_table('images')
    op.drop_index(op.f('ix_announcements_title'), table_name='announcements')
    op.drop_table('announcements')
    # ### end Alembic commands ###
